---
# file: samba_servers.yml
- hosts: all
  name: Initializing
  sudo: yes

  tasks:
    - name: Detect guest OS family
      group_by: key={{ ansible_os_family }}
      changed_when: False

    - name: Set hostname
      hostname: "name={{ inventory_hostname }}{% if ad['domain'] is defined and ad['domain'] %}.{{ ad['domain'] }}{% endif %}"

    - name: Disable SELinux
      selinux: state=disabled

- hosts: RedHat
  name: Server Setup (RedHat)
  sudo: yes
  gather_facts: False

  tasks:
#    - include: roles/common/tasks/setup-RedHat.yml

- hosts: none
  name: Server Setup (Common)
  sudo: yes

  roles:
    - common

  vars:
    - firewall_services:
      - ssh
      - samba
      - samba-client
    - firewall_ports:
      - '4379/tcp'
    - firewall_interfaces:
      - 'eth0'
      - 'eth1'

  tasks:
    - name: Disable SELinux
      selinux: state=disabled

- hosts: samba_servers:ganesha_servers
  name: Server Setup (CTDB)
  sudo: yes

  tasks:
    - name: Deactivate certain NFS checks
      command: "mv /etc/ctdb/nfs-checks.d/{{item}}.check /etc/ctdb/nfs-checks.d/{{item}}.disabled"
      args:
        creates: "/etc/ctdb/nfs-checks.d/{{item}}.disabled"
        removes: "/etc/ctdb/nfs-checks.d/{{item}}.check"
      with_items:
        - 10.status
        - 20.nfs
        - 30.nlockmgr
        - 40.mountd
        - 50.rquotad
      when: ctdb['setup_ctdb'] is defined and ctdb['setup_ctdb']

    - name: Copy CTDB config files
      template: src={{item.src}} dest={{item.dest}} owner=root group=root mode=0744
      with_items:
        - { src: "{% if ctdb['config'] is defined and ctdb['config'] %}{{ ctdb['config'] }}{% else %}'files/ctdb'{% endif %}", dest: '/etc/sysconfig/ctdb' }
        - { src: 'files/nodes.j2', dest: '/etc/ctdb/nodes' }
        - { src: 'files/public_addresses.j2', dest: '/etc/ctdb/public_addresses' }
        - { src: 'files/nfs-ganesha-callout', dest: '/etc/ctdb/nfs-ganesha-callout' }
        - { src: 'files/20.nfs_ganesha.check', dest: '/etc/ctdb/nfs-checks.d/20.nfs.check' }
        - { src: 'files/60.nfs', dest: '/etc/ctdb/events.d/60.nfs' }
      when: ctdb['setup_ctdb'] is defined and ctdb['setup_ctdb']

- hosts: samba_servers
  name: Server Setup (SMB)
  sudo: yes

#  roles:
#    - samba

  tasks:
    - name: Copy Samba config files
      template: src={{item.src}} dest={{item.dest}} owner=root group=root mode=0744
      with_items:
        - { src: "files/smb.conf.j2", dest: '/etc/samba/smb.conf' }
      when: samba['setup_samba'] is defined and samba['setup_samba']

    - name: Ensure share directories exist
      file: "path={{ samba['shares'][item]['path'] }} state=directory mode=0777"
      with_items: "{{ samba['shares'] }}"
      when: "samba['setup_samba'] is defined and samba['setup_samba'] and item and ('glusterfs:volume' not in samba['shares'][item].keys())"

- hosts: ganesha_servers
  name: Server Setup (NFS)
  sudo: yes

  tasks:
    - name: Copy Ganesha config files
      template: src={{item.src}} dest={{item.dest}} owner=root group=root mode=0744
      with_items:
        - { src: "files/ganesha.conf", dest: '/etc/ganesha/ganesha.conf' }
        - { src: "files/nfs", dest: '/etc/sysconfig/nfs' }
      when: ganesha['setup_ganesha'] is defined and ganesha['setup_ganesha']

- hosts: ad_server
  name: Active Directory Setup
  sudo: yes

  tasks:
    - include: roles/samba/tasks/setup-AD.yml
      when: ad['setup_ad']

- hosts: all
  name: Start Services
  sudo: yes

  tasks:
    - name: Start services
      service: "name={{ item }} state=restarted enabled=yes"
      with_items: "{{ services }}"

    - name: Setup vagrant Samba user
      shell: "echo -e 'vagrant\nvagrant' | smbpasswd -a vagrant"
      register: smbpasswd_result
      when: samba['setup_samba'] is defined and samba['setup_samba']
      changed_when: "'Added user vagrant.' in smbpasswd_result.stdout"
      run_once: true
